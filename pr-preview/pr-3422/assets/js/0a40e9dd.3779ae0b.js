"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["3817"],{6454:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>c,default:()=>m,metadata:()=>s,assets:()=>d,contentTitle:()=>u});var s=JSON.parse('{"id":"guides/angular-13+","title":"Angular >=13","description":"Angular 13 introduces ESM package format for Angular packages. jest-preset-angular","source":"@site/versioned_docs/version-15.0/guides/angular-13+.md","sourceDirName":"guides","slug":"/guides/angular-13+","permalink":"/jest-preset-angular/pr-preview/pr-3422/docs/guides/angular-13+","draft":false,"unlisted":false,"editUrl":"https://github.com/thymikee/jest-preset-angular/edit/main/website/versioned_docs/version-15.0/guides/angular-13+.md","tags":[],"version":"15.0","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1760338073000,"frontMatter":{"id":"angular-13+","title":"Angular >=13"},"sidebar":"docs","previous":{"title":"TestBed environment","permalink":"/jest-preset-angular/pr-preview/pr-3422/docs/getting-started/testbed-environment"},"next":{"title":"ESM Support","permalink":"/jest-preset-angular/pr-preview/pr-3422/docs/guides/esm-support"}}'),r=t(4848),a=t(4429),i=t(6346),o=t(6754);let l={id:"angular-13+",title:"Angular >=13"},u,d={},c=[{value:"Migration steps from Angular &lt; 13",id:"migration-steps-from-angular--13",level:2},{value:"Using ES Modules",id:"using-es-modules",level:3},{value:"Potential issues with Angular 13 ESM package format and workaround",id:"potential-issues-with-angular-13-esm-package-format-and-workaround",level:2},{value:"<code>Cannot find modules</code> error when importing any deep paths from Angular ESM format packages",id:"cannot-find-modules-error-when-importing-any-deep-paths-from-angular-esm-format-packages",level:3},{value:"Usage with Angular libraries which are built with Angular CLI 13",id:"usage-with-angular-libraries-which-are-built-with-angular-cli-13",level:3},{value:"Usage with Ionic 6 or 7",id:"usage-with-ionic-6-or-7",level:3}];function p(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Angular 13"})," introduces ESM package format for Angular packages. ",(0,r.jsx)(n.code,{children:"jest-preset-angular"}),"\ncurrently supports testing with Jest in ",(0,r.jsx)(n.code,{children:"CommonJS"})," mode with ",(0,r.jsx)(n.strong,{children:"Angular 13"})," using ",(0,r.jsx)(n.a,{href:"/jest-preset-angular/pr-preview/pr-3422/docs/getting-started/presets",children:"default preset"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"important",children:(0,r.jsxs)(n.p,{children:["With Jest 28 and ",(0,r.jsx)(n.code,{children:"jest-preset-angular"})," ",(0,r.jsx)(n.strong,{children:"v12.0.0"}),", ",(0,r.jsx)(n.code,{children:"ng-jest-resolver"})," is no longer required to have in Jest config. This\nresolver is also excluded from our default and default ESM presets."]})}),"\n",(0,r.jsxs)(n.p,{children:["Starting from ",(0,r.jsx)(n.strong,{children:"v11.0.0"}),", ",(0,r.jsx)(n.code,{children:"jest-preset-angular"})," introduces a few extra changes to be able to run Jest with ",(0,r.jsx)(n.strong,{children:"Angular 13"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"moduleFileExtensions"})," is updated to include ",(0,r.jsx)(n.code,{children:"mjs"})," files as accepted module format."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"transformIgnorePatterns"})," is added to inform Jest to transform ",(0,r.jsx)(n.code,{children:".mjs"})," files."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"transform"})," is updated to include ",(0,r.jsx)(n.code,{children:".mjs"})," extension to transform to ",(0,r.jsx)(n.code,{children:"CommonJS"})," codes."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"migration-steps-from-angular--13",children:"Migration steps from Angular < 13"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Upgrade the project to ",(0,r.jsx)(n.strong,{children:"Angular 13"})," following ",(0,r.jsx)(n.a,{href:"https://angular.dev/update-guide/",children:"guide"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"If one is using the default preset as following:"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.A,{groupId:"code-examples",children:[(0,r.jsx)(o.A,{value:"node-<22.18",label:"Node <22.18",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts" tab={"label":"Node <22.18"}',children:"import type { Config } from 'jest';\nimport { createCjsPreset } from 'jest-preset-angular/presets';\n\nexport default {\n  ...createCjsPreset(),\n} satisfies Config;\n"})})}),(0,r.jsx)(o.A,{value:"node-22.18+",label:"Node 22.18+",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts" tab={"label":"Node 22.18+"}',children:"import type { Config } from 'jest';\nimport { createCjsPreset } from 'jest-preset-angular/presets/index.js';\n\nexport default {\n  ...createCjsPreset(),\n} satisfies Config;\n"})})})]}),"\n",(0,r.jsx)(n.p,{children:"there are no migration steps required"}),"\n",(0,r.jsx)(n.h3,{id:"using-es-modules",children:"Using ES Modules"}),"\n",(0,r.jsxs)(n.p,{children:["ES Modules support is new and may encounter issues. See ",(0,r.jsx)(n.a,{href:"https://github.com/thymikee/jest-preset-angular/tree/main/examples",children:"example-apps"})," for the tests that run using ESM mode."]}),"\n",(0,r.jsxs)(i.A,{groupId:"code-examples",children:[(0,r.jsx)(o.A,{value:"node-<22.18",label:"Node <22.18",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts" tab={"label":"Node <22.18"}',children:"import type { Config } from 'jest';\nimport { createEsmPreset } from 'jest-preset-angular/presets';\nimport { pathsToModuleNameMapper } from 'ts-jest';\nimport { compilerOptions } from './tsconfig.json' with { type: 'json' };\n\nexport default {\n  ...createEsmPreset(),\n  transform: {\n    '^.+\\\\.(ts|js|mjs|html|svg)$': [\n      'jest-preset-angular',\n      {\n        tsconfig: '<rootDir>/tsconfig-esm.spec.json',\n        stringifyContentPathRegex: '\\\\.(html|svg)$',\n        isolatedModules: true,\n        useESM: true,\n      },\n    ],\n  },\n  moduleNameMapper: {\n    ...pathsToModuleNameMapper(compilerOptions.paths, { prefix: '<rootDir>' }),\n    tslib: 'tslib/tslib.es6.js',\n  },\n  setupFilesAfterEnv: ['<rootDir>/setup-jest.ts'],\n} satisfies Config;\n"})})}),(0,r.jsx)(o.A,{value:"node-22.18+",label:"Node 22.18+",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts" tab={"label":"Node 22.18+"}',children:"import type { Config } from 'jest';\nimport { createEsmPreset } from 'jest-preset-angular/presets/index.js';\nimport { pathsToModuleNameMapper } from 'ts-jest';\nimport { compilerOptions } from './tsconfig.json' with { type: 'json' };\n\nexport default {\n  ...createEsmPreset(),\n  transform: {\n    '^.+\\\\.(ts|js|mjs|html|svg)$': [\n      'jest-preset-angular',\n      {\n        tsconfig: '<rootDir>/tsconfig-esm.spec.json',\n        stringifyContentPathRegex: '\\\\.(html|svg)$',\n        isolatedModules: true,\n        useESM: true,\n      },\n    ],\n  },\n  moduleNameMapper: {\n    ...pathsToModuleNameMapper(compilerOptions.paths, { prefix: '<rootDir>' }),\n    tslib: 'tslib/tslib.es6.js',\n  },\n  setupFilesAfterEnv: ['<rootDir>/setup-jest.ts'],\n} satisfies Config;\n"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Before upgrading to ng13 and switching to ES Modules, your ",(0,r.jsx)(n.code,{children:"setup-jest.ts"})," file most likely uses the preset ",(0,r.jsx)(n.code,{children:"setup-jest"}),", like the following:"]}),"\n",(0,r.jsxs)(i.A,{groupId:"code-examples",children:[(0,r.jsx)(o.A,{value:"setup-file cjs",label:"Setup file CJS",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="setup-jest.ts" tab={"label":"Setup file CJS"}',children:"import { setupZoneTestEnv } from 'jest-preset-angular/setup-env/zone';\n\nsetupZoneTestEnv();\n"})})}),(0,r.jsx)(o.A,{value:"setup-file esm",label:"Setup file ESM",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="setup-jest.ts" tab={"label":"Setup file ESM"}',children:"import { setupZoneTestEnv } from 'jest-preset-angular/setup-env/zone/index.mjs';\n\nsetupZoneTestEnv();\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"potential-issues-with-angular-13-esm-package-format-and-workaround",children:"Potential issues with Angular 13 ESM package format and workaround"}),"\n",(0,r.jsxs)(n.h3,{id:"cannot-find-modules-error-when-importing-any-deep-paths-from-angular-esm-format-packages",children:[(0,r.jsx)(n.code,{children:"Cannot find modules"})," error when importing any deep paths from Angular ESM format packages"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Cannot find module '@angular/common/locales/xx' from 'src/app/app.component.spec.ts'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["To fix this issue, one needs to add ",(0,r.jsx)(n.code,{children:"mjs"})," to ",(0,r.jsx)(n.code,{children:"moduleFileExtensions"})," as following"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nexport default {\n  // ...other options\n  moduleFileExtensions: ['ts', 'html', 'js', 'json', 'mjs'],\n} satisfies Config;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"usage-with-angular-libraries-which-are-built-with-angular-cli-13",children:"Usage with Angular libraries which are built with Angular CLI 13"}),"\n",(0,r.jsxs)(n.p,{children:["Besides, the changes in Angular packages themselves, ",(0,r.jsx)(n.strong,{children:"Angular"})," libraries which are built with ",(0,r.jsx)(n.strong,{children:"Angular CLI 13"})," also introduce\nESM package format. Similar to Angular packages, Jest doesn't understand ",(0,r.jsx)(n.code,{children:".mjs"})," files which are in these new format\nlibraries in Jest ",(0,r.jsx)(n.strong,{children:"CommonJS"})," mode."]}),"\n",(0,r.jsxs)(n.p,{children:["To fix this issue, one should modify ",(0,r.jsx)(n.code,{children:"transformIgnorePatterns"})," to be as following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nexport default {\n  // ...other options\n  transformIgnorePatterns: ['node_modules/(?!(.*\\\\.mjs$|@angular/common/locales/.*\\\\.js$))'],\n} satisfies Config;\n"})}),"\n",(0,r.jsx)(n.h3,{id:"usage-with-ionic-6-or-7",children:"Usage with Ionic 6 or 7"}),"\n",(0,r.jsxs)(n.p,{children:["To support Ionic 6 or 7 you will need to modify ",(0,r.jsx)(n.code,{children:"transformIgnorePatterns"})," to be as following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nexport default {\n  // ...other options\n  transformIgnorePatterns: [\n    '<rootDir>/node_modules/(?!(@ionic/core|@ionic/angular|@stencil/core|.*\\\\.mjs|@angular/common/locales/.*\\\\.js$))',\n  ],\n} satisfies Config;\n"})})]})}function m(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},6754:function(e,n,t){t.d(n,{A:()=>a});var s=t(4848);t(6540);var r=t(9836);function a({children:e,hidden:n,className:t}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)("tabItem_Ymn6",t),hidden:n,children:e})}},6346:function(e,n,t){t.d(n,{A:()=>v});var s=t(4848),r=t(6540),a=t(9836),i=t(9783),o=t(1984),l=t(6347),u=t(9117),d=t(3341),c=t(8562),p=t(423);function m(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}var g=t(7007);function f({className:e,block:n,selectedValue:t,selectValue:r,tabValues:i}){let l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),d=e=>{let n=e.currentTarget,s=i[l.indexOf(n)].value;s!==t&&(u(n),r(s))},c=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{let t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{let t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1]}}n?.focus()};return(0,s.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},e),children:i.map(({value:e,label:n,attributes:r})=>(0,s.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:d,...r,className:(0,a.A)("tabs__item","tabItem_LNqP",r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function j({lazy:e,children:n,selectedValue:t}){let i=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=i.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,s.jsx)("div",{className:"margin-top--md",children:i.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function x(e){let n=function(e){let n,{defaultValue:t,queryString:s=!1,groupId:a}=e,i=function(e){let{values:n,children:t}=e;return(0,r.useMemo)(()=>{let e=n??m(t).map(({props:{value:e,label:n,attributes:t,default:s}})=>({value:e,label:n,attributes:t,default:s})),s=(0,c.XI)(e,(e,n)=>e.value===n.value);if(s.length>0)throw Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,t])}(e),[o,g]=(0,r.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let t=n.find(e=>e.default)??n[0];if(!t)throw Error("Unexpected error: 0 tabValues");return t.value})({defaultValue:t,tabValues:i})),[f,j]=function({queryString:e=!1,groupId:n}){let t=(0,l.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,d.aZ)(s),(0,r.useCallback)(e=>{if(!s)return;let n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}({queryString:s,groupId:a}),[x,v]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[t,s]=(0,p.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:a}),b=h({value:n=f??x,tabValues:i})?n:null;return(0,u.A)(()=>{b&&g(b)},[b]),{selectedValue:o,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);g(e),j(e),v(e)},[j,v,i]),tabValues:i}}(e);return(0,s.jsxs)("div",{className:(0,a.A)(i.G.tabs.container,"tabs-container","tabList__CuJ"),children:[(0,s.jsx)(f,{...n,...e}),(0,s.jsx)(j,{...n,...e})]})}function v(e){let n=(0,g.A)();return(0,s.jsx)(x,{...e,children:m(e.children)},String(n))}},4429:function(e,n,t){t.d(n,{R:()=>i,x:()=>o});var s=t(6540);let r={},a=s.createContext(r);function i(e){let n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);