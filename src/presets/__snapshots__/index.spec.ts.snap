// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Jest presets should have the correct types which come from \`ts-jest\` 1`] = `
"declare const _default: {
  transformIgnorePatterns: string[];
  transform: {
    '^.+\\\\\\\\.(ts|js|mjs|html|svg)$': string;
  };
  globals: import('ts-jest').GlobalConfigTsJest;
  testEnvironment: string;
  moduleFileExtensions: string[];
  snapshotSerializers: string[];
};
export default _default;
"
`;

exports[`Jest presets should have the correct types which come from \`ts-jest\` 2`] = `
"declare const _default: {
  extensionsToTreatAsEsm: string[];
  globals: {
    'ts-jest': {
      useESM: boolean;
      tsconfig?: string | boolean | import('ts-jest').RawCompilerOptions | undefined;
      isolatedModules?: boolean | undefined;
      compiler?: string | undefined;
      astTransformers?: import('ts-jest').ConfigCustomTransformer | undefined;
      diagnostics?:
        | boolean
        | {
            pretty?: boolean | undefined;
            ignoreCodes?: string | number | Array<string | number> | undefined;
            exclude?: string[] | undefined;
            warnOnly?: boolean | undefined;
          }
        | undefined;
      babelConfig?: string | boolean | import('@babel/core').TransformOptions | undefined;
      stringifyContentPathRegex?: string | RegExp | undefined;
    };
  };
  moduleNameMapper: {
    tslib: string;
  };
  transform: {
    '^.+\\\\\\\\.(ts|js|html|svg)$': string;
  };
  transformIgnorePatterns: string[];
  testEnvironment: string;
  moduleFileExtensions: string[];
  snapshotSerializers: string[];
};
export default _default;
"
`;

exports[`Jest presets should return the correct jest config 1`] = `
Object {
  "globals": Object {
    "ts-jest": Object {
      "stringifyContentPathRegex": "\\\\.(html|svg)$",
      "tsconfig": "<rootDir>/tsconfig.spec.json",
    },
  },
  "moduleFileExtensions": Array [
    "ts",
    "html",
    "js",
    "json",
    "mjs",
  ],
  "snapshotSerializers": Array [
    "jest-preset-angular/build/serializers/html-comment",
    "jest-preset-angular/build/serializers/ng-snapshot",
    "jest-preset-angular/build/serializers/no-ng-attributes",
  ],
  "testEnvironment": "jsdom",
  "transform": Object {
    "^.+\\\\.(ts|js|mjs|html|svg)$": "jest-preset-angular",
  },
  "transformIgnorePatterns": Array [
    "node_modules/(?!.*\\\\.mjs$)",
  ],
}
`;

exports[`Jest presets should return the correct jest config 2`] = `
Object {
  "extensionsToTreatAsEsm": Array [
    ".ts",
  ],
  "globals": Object {
    "ts-jest": Object {
      "stringifyContentPathRegex": "\\\\.(html|svg)$",
      "tsconfig": "<rootDir>/tsconfig.spec.json",
      "useESM": true,
    },
  },
  "moduleFileExtensions": Array [
    "ts",
    "html",
    "js",
    "json",
    "mjs",
  ],
  "moduleNameMapper": Object {
    "tslib": "tslib/tslib.es6.js",
  },
  "snapshotSerializers": Array [
    "jest-preset-angular/build/serializers/html-comment",
    "jest-preset-angular/build/serializers/ng-snapshot",
    "jest-preset-angular/build/serializers/no-ng-attributes",
  ],
  "testEnvironment": "jsdom",
  "transform": Object {
    "^.+\\\\.(ts|js|html|svg)$": "jest-preset-angular",
  },
  "transformIgnorePatterns": Array [
    "node_modules/(?!tslib)",
  ],
}
`;
