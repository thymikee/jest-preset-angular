// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inlining template and stripping styles should not transform styles outside decorator 1`] = `
"var assignmentsToNotBeTransformed = {
    styles: [{
            color: 'red'
        }]
};
"
`;

exports[`inlining template and stripping styles should not strip styleUrls assignment 1`] = `
"\\"use strict\\";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === \\"object\\" && typeof Reflect.decorate === \\"function\\") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, \\"__esModule\\", { value: true });
var core_1 = require(\\"@angular/core\\");
var AngularComponent = /** @class */ (function () {
    function AngularComponent() {
    }
    AngularComponent = __decorate([
        SomeDecorator({
            value: 'test',
            styles: [
                ':host { background-color: red }'
            ],
        }),
        core_1.Component({
            templateUrl: './page.html',
            styleUrls: [
                './fancy-styles.css',
                './basic-styles.scss'
            ],
            styles: [],
            unaffectedProperty: 'whatever'
        })
    ], AngularComponent);
    return AngularComponent;
}());
exports.AngularComponent = AngularComponent;
"
`;
