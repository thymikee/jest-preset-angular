// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should add ctor param to class constructor 1`] = `
"import { forwardRef, Inject, Injector } from '@angular/core';
class Door {
    // Door attempts to inject Lock, despite it not being defined yet.
    // forwardRef makes this possible.
    constructor(lock) {
        this.lock = lock;
    }
}
Door.ctorParameters = () => [
    { type: Lock, decorators: [{ type: Inject, args: [forwardRef(() => Lock),] }] }
];
// Only at this point Lock is defined.
class Lock {
}
Injector.create({
    providers: [
        { provide: Lock, deps: [] },
        { provide: Door, deps: [Lock] },
    ],
});
//# "
`;

exports[`should add ctor param to class constructor 2`] = `
"\\"use strict\\";
Object.defineProperty(exports, \\"__esModule\\", { value: true });
const core_1 = require(\\"@angular/core\\");
class Door {
    // Door attempts to inject Lock, despite it not being defined yet.
    // forwardRef makes this possible.
    constructor(lock) {
        this.lock = lock;
    }
}
Door.ctorParameters = () => [
    { type: Lock, decorators: [{ type: core_1.Inject, args: [core_1.forwardRef(() => Lock),] }] }
];
// Only at this point Lock is defined.
class Lock {
}
core_1.Injector.create({
    providers: [
        { provide: Lock, deps: [] },
        { provide: Door, deps: [Lock] },
    ],
});
//# "
`;
