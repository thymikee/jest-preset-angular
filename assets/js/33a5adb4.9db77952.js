"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["3101"],{6504:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>p,default:()=>j,toc:()=>h,metadata:()=>s,assets:()=>d,contentTitle:()=>c});var s=JSON.parse('{"id":"guides/snapshot-testing","title":"Snapshot testing","description":"jest-preset-angular provides several snapshot serializers to generate clearer and more human-readable snapshot.","source":"@site/versioned_docs/version-14.2/guides/snapshot-testing.md","sourceDirName":"guides","slug":"/guides/snapshot-testing","permalink":"/jest-preset-angular/docs/14.2/guides/snapshot-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/thymikee/jest-preset-angular/edit/main/website/versioned_docs/version-14.2/guides/snapshot-testing.md","tags":[],"version":"14.2","lastUpdatedBy":"ahnpnl","lastUpdatedAt":1756068263000,"frontMatter":{"id":"snapshot-testing","title":"Snapshot testing"},"sidebar":"docs","previous":{"title":"Configure other JSDOM versions","permalink":"/jest-preset-angular/docs/14.2/guides/jsdom-version"},"next":{"title":"Using with Babel","permalink":"/jest-preset-angular/docs/14.2/guides/using-with-babel"}}'),i=t(5893),r=t(65),l=t(7057),a=t(4250),o=t(1924);let p={id:"snapshot-testing",title:"Snapshot testing"},c=void 0,d={},h=[{value:"Snapshot serializers",id:"snapshot-serializers",level:2},{value:"Reference",id:"reference",level:2},{value:"Remove html comments (<code>html-comment</code>)",id:"remove-html-comments-html-comment",level:3},{value:"In Jest config",id:"in-jest-config",level:4},{value:"Or in setup test environment file",id:"or-in-setup-test-environment-file",level:4},{value:"Or in individual test files",id:"or-in-individual-test-files",level:4},{value:"Display component HTML (<code>ng-snapshot</code>)",id:"display-component-html-ng-snapshot",level:3},{value:"Configuration options",id:"configuration-options",level:4},{value:"In Jest config",id:"in-jest-config-1",level:4},{value:"Or in setup test environment file",id:"or-in-setup-test-environment-file-1",level:4},{value:"Or in individual test files",id:"or-in-individual-test-files-1",level:4},{value:"With options",id:"with-options",level:4},{value:"Remove Angular attributes (<code>no-ng-attributes</code>)",id:"remove-angular-attributes-no-ng-attributes",level:3},{value:"In Jest config",id:"in-jest-config-2",level:4},{value:"Or in setup test environment file",id:"or-in-setup-test-environment-file-2",level:4},{value:"Or in individual test files",id:"or-in-individual-test-files-2",level:4}];function m(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"jest-preset-angular"})," provides several snapshot serializers to generate clearer and more human-readable snapshot."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"BY DEFAULT"}),", the ",(0,i.jsx)(n.a,{href:"/jest-preset-angular/docs/14.2/getting-started/presets",children:"preset"})," provides all of the snapshot serializers below."]})}),"\n",(0,i.jsx)(n.h2,{id:"snapshot-serializers",children:"Snapshot serializers"}),"\n","\n",(0,i.jsx)(o.Z,{toc:h.slice(2)}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(n.h3,{id:"remove-html-comments-html-comment",children:["Remove html comments (",(0,i.jsx)(n.code,{children:"html-comment"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"Allow removing all the comments in the component HTML in snapshot."}),"\n",(0,i.jsx)(n.p,{children:"Examples:"}),"\n",(0,i.jsx)(n.h4,{id:"in-jest-config",children:"In Jest config"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsx)(a.Z,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="jest.config.js"',children:"/** @type {import('jest').Config} */\nmodule.exports = {\n  //[...]\n  snapshotSerializers: ['jest-preset-angular/build/serializers/html-comment'],\n  //[...]\n};\n"})})}),(0,i.jsx)(a.Z,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //[...]\n  snapshotSerializers: ['jest-preset-angular/build/serializers/html-comment'],\n  //[...]\n};\n\nexport default jestConfig;\n"})})})]}),"\n",(0,i.jsx)(n.h4,{id:"or-in-setup-test-environment-file",children:"Or in setup test environment file"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsxs)(a.Z,{value:"js",label:"JavaScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab={"span":2} title="jest.config.js"',children:"/** @type {import('jest').Config} */\nmodule.exports = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.js'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="setup-jest.js"',children:"const removeHtmlCommentsSerializer = require('jest-preset-angular/build/serializers/html-comment');\n\nexpect.addSnapshotSerializer(removeHtmlCommentsSerializer);\n"})})]}),(0,i.jsxs)(a.Z,{value:"ts",label:"TypeScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab={"span":2} title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.ts'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="setup-jest.ts"',children:"import removeHtmlCommentsSerializer from 'jest-preset-angular/build/serializers/html-comment';\n\nexpect.addSnapshotSerializer(removeHtmlCommentsSerializer);\n"})})]})]}),"\n",(0,i.jsx)(n.h4,{id:"or-in-individual-test-files",children:"Or in individual test files"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsx)(a.Z,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="foo.component.spec.js"',children:"const removeHtmlCommentsSerializer = require('jest-preset-angular/build/serializers/html-comment');\n\nexpect.addSnapshotSerializer(removeHtmlCommentsSerializer);\n\nit('should work', () => {\n  //[...]\n});\n"})})}),(0,i.jsx)(a.Z,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="foo.component.spec.ts"',children:"import removeHtmlCommentsSerializer from 'jest-preset-angular/build/serializers/html-comment';\n\nexpect.addSnapshotSerializer(removeHtmlCommentsSerializer);\n\nit('should work', () => {\n  //[...]\n});\n"})})})]}),"\n",(0,i.jsxs)(n.h3,{id:"display-component-html-ng-snapshot",children:["Display component HTML (",(0,i.jsx)(n.code,{children:"ng-snapshot"}),")"]}),"\n",(0,i.jsx)(n.p,{children:"Allow displaying component HTML with data in snapshot."}),"\n",(0,i.jsx)(n.h4,{id:"configuration-options",children:"Configuration options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"type NgSnapshotOptions = {\n  omitAllCompAttrs?: boolean;\n};\n"})}),"\n",(0,i.jsx)(n.p,{children:"Configure snapshot behavior"}),"\n",(0,i.jsx)(n.p,{children:"Examples:"}),"\n",(0,i.jsx)(n.h4,{id:"in-jest-config-1",children:"In Jest config"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsx)(a.Z,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="jest.config.js"',children:"/** @type {import('jest').Config} */\nmodule.exports = {\n  //[...]\n  snapshotSerializers: ['jest-preset-angular/build/serializers/ng-snapshot'],\n  //[...]\n};\n"})})}),(0,i.jsx)(a.Z,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //[...]\n  snapshotSerializers: ['jest-preset-angular/build/serializers/ng-snapshot'],\n  //[...]\n};\n\nexport default jestConfig;\n"})})})]}),"\n",(0,i.jsx)(n.h4,{id:"or-in-setup-test-environment-file-1",children:"Or in setup test environment file"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsxs)(a.Z,{value:"js",label:"JavaScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab={"span":2} title="jest.config.js"',children:"/** @type {import('jest').Config} */\nmodule.exports = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.js'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="setup-jest.js"',children:"const componentSnapshotSerializer = require('jest-preset-angular/build/serializers/ng-snapshot');\n\nexpect.addSnapshotSerializer(componentSnapshotSerializer);\n"})})]}),(0,i.jsxs)(a.Z,{value:"ts",label:"TypeScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab={"span":2} title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.ts'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="setup-jest.ts"',children:"import componentSnapshotSerializer from 'jest-preset-angular/build/serializers/ng-snapshot';\n\nexpect.addSnapshotSerializer(componentSnapshotSerializer);\n"})})]})]}),"\n",(0,i.jsx)(n.h4,{id:"or-in-individual-test-files-1",children:"Or in individual test files"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsx)(a.Z,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="foo.component.spec.js"',children:"const componentSnapshotSerializer = require('jest-preset-angular/build/serializers/ng-snapshot');\n\nexpect.addSnapshotSerializer(componentSnapshotSerializer);\n\nit('should work', () => {\n  //[...]\n});\n"})})}),(0,i.jsx)(a.Z,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="foo.component.spec.ts"',children:"import componentSnapshotSerializer from 'jest-preset-angular/build/serializers/ng-snapshot';\n\nexpect.addSnapshotSerializer(componentSnapshotSerializer);\n\nit('should work', () => {\n  //[...]\n});\n"})})})]}),"\n",(0,i.jsx)(n.h4,{id:"with-options",children:"With options"}),"\n",(0,i.jsxs)(n.admonition,{title:"Effective priority",type:"info",children:[(0,i.jsx)(n.p,{children:"The configured serializers will have affect in this order:"}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Jest config"})," -> ",(0,i.jsx)(n.code,{children:"setup files"})," -> ",(0,i.jsx)(n.code,{children:"test files"})]}),(0,i.jsx)(n.p,{children:"The later the higher priority. This means that with the same serializer, the later one will override the configuration\nof the previous one in the chain."})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"In setup files:"}),"\n"]}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsxs)(a.Z,{value:"js",label:"JavaScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab={"span":2} title="jest.config.js"',children:"/** @type {import('jest').Config} */\nmodule.exports = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.js'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="setup-jest.js"',children:"const componentSnapshotSerializer = require('jest-preset-angular/build/serializers/ng-snapshot');\n\nexpect.addSnapshotSerializer({\n  print: (val, print, indent, options, colors) =>\n    componentSnapshotSerializer.print(\n      val,\n      print,\n      indent,\n      {\n        ...options,\n        omitAllCompAttrs: true,\n      },\n      colors,\n    ),\n  test: componentSnapshotSerializer.test,\n});\n"})})]}),(0,i.jsxs)(a.Z,{value:"ts",label:"TypeScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab={"span":2} title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.ts'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="setup-jest.ts"',children:"import componentSnapshotSerializer from 'jest-preset-angular/build/serializers/ng-snapshot';\n\nexpect.addSnapshotSerializer({\n  print: (val, print, indent, options, colors) =>\n    componentSnapshotSerializer.print(\n      val,\n      print,\n      indent,\n      {\n        ...options,\n        omitAllCompAttrs: true,\n      },\n      colors,\n    ),\n  test: componentSnapshotSerializer.test,\n});\n"})})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"or in individual test files:"}),"\n"]}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsx)(a.Z,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="foo.component.spec.js"',children:"const componentSnapshotSerializer = require('jest-preset-angular/build/serializers/ng-snapshot');\n\nexpect.addSnapshotSerializer({\n  print: (val, print, indent, options, colors) =>\n    componentSnapshotSerializer.print(\n      val,\n      print,\n      indent,\n      {\n        ...options,\n        omitAllCompAttrs: true,\n      },\n      colors,\n    ),\n  test: componentSnapshotSerializer.test,\n});\n\nit('should work', () => {\n  //[...]\n});\n"})})}),(0,i.jsx)(a.Z,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="foo.component.spec.ts"',children:"import componentSnapshotSerializer from 'jest-preset-angular/build/serializers/ng-snapshot';\n\nexpect.addSnapshotSerializer({\n  print: (val, print, indent, options, colors) =>\n    componentSnapshotSerializer.print(\n      val,\n      print,\n      indent,\n      {\n        ...options,\n        omitAllCompAttrs: true,\n      },\n      colors,\n    ),\n  test: componentSnapshotSerializer.test,\n});\n\nit('should work', () => {\n  //[...]\n});\n"})})})]}),"\n",(0,i.jsxs)(n.h3,{id:"remove-angular-attributes-no-ng-attributes",children:["Remove Angular attributes (",(0,i.jsx)(n.code,{children:"no-ng-attributes"}),")"]}),"\n",(0,i.jsxs)(n.p,{children:["Allow removing attributes generated by Angular fixture, like ",(0,i.jsx)(n.code,{children:"ng-reflect-*"}),", ",(0,i.jsx)(n.code,{children:'ng-version="*"'}),", ",(0,i.jsx)(n.code,{children:"_ngcontent-c*"})," etc., from component snapshot"]}),"\n",(0,i.jsx)(n.p,{children:"Examples:"}),"\n",(0,i.jsx)(n.h4,{id:"in-jest-config-2",children:"In Jest config"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsx)(a.Z,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="jest.config.js"',children:"/** @type {import('jest').Config} */\nmodule.exports = {\n  //[...]\n  snapshotSerializers: ['jest-preset-angular/build/serializers/no-ng-attributes'],\n  //[...]\n};\n"})})}),(0,i.jsx)(a.Z,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //[...]\n  snapshotSerializers: ['jest-preset-angular/build/serializers/no-ng-attributes'],\n  //[...]\n};\n\nexport default jestConfig;\n"})})})]}),"\n",(0,i.jsx)(n.h4,{id:"or-in-setup-test-environment-file-2",children:"Or in setup test environment file"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsxs)(a.Z,{value:"js",label:"JavaScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab={"span":2} title="jest.config.js"',children:"/** @type {import('jest').Config} */\nmodule.exports = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.js'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'title="setup-jest.js"',children:"const removeNgAttributes = require('jest-preset-angular/build/serializers/no-ng-attributes');\n\nexpect.addSnapshotSerializer(removeNgAttributes);\n"})})]}),(0,i.jsxs)(a.Z,{value:"ts",label:"TypeScript",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab={"span":2} title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //[...]\n  setupFilesAfterEnv: ['./setup-jest.ts'],\n  //[...]\n};\n"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="setup-jest.ts"',children:"import removeNgAttributes from 'jest-preset-angular/build/serializers/no-ng-attributes';\n\nexpect.addSnapshotSerializer(removeNgAttributes);\n"})})]})]}),"\n",(0,i.jsx)(n.h4,{id:"or-in-individual-test-files-2",children:"Or in individual test files"}),"\n",(0,i.jsxs)(l.Z,{groupId:"code-examples",children:[(0,i.jsx)(a.Z,{value:"js",label:"JavaScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",metastring:'tab title="foo.component.spec.js"',children:"const removeNgAttributes = require('jest-preset-angular/build/serializers/no-ng-attributes');\n\nexpect.addSnapshotSerializer(removeNgAttributes);\n\nit('should work', () => {\n  //[...]\n});\n"})})}),(0,i.jsx)(a.Z,{value:"ts",label:"TypeScript",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'tab title="foo.component.spec.ts"',children:"import removeNgAttributes from 'jest-preset-angular/build/serializers/no-ng-attributes';\n\nexpect.addSnapshotSerializer(removeNgAttributes);\n\nit('should work', () => {\n  //[...]\n});\n"})})})]})]})}function j(e={}){let{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}}}]);