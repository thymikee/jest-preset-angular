"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["4033"],{5436:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>o,toc:()=>c,default:()=>g,metadata:()=>s,assets:()=>a,contentTitle:()=>l});var s=JSON.parse('{"id":"guides/angular-ivy","title":"Angular Ivy","description":"This guide is now DEPRECATED and will be removed in the next major release together with the below APIs.","source":"@site/versioned_docs/version-14.x/guides/angular-ivy.md","sourceDirName":"guides","slug":"/guides/angular-ivy","permalink":"/jest-preset-angular/docs/14.x/guides/angular-ivy","draft":false,"unlisted":false,"editUrl":"https://github.com/thymikee/jest-preset-angular/edit/main/website/versioned_docs/version-14.x/guides/angular-ivy.md","tags":[],"version":"14.x","lastUpdatedBy":"renovate[bot]","lastUpdatedAt":1760338073000,"frontMatter":{"id":"angular-ivy","title":"Angular Ivy"},"sidebar":"docs","previous":{"title":"TestBed environment","permalink":"/jest-preset-angular/docs/14.x/getting-started/testbed-environment"},"next":{"title":"Angular >=13","permalink":"/jest-preset-angular/docs/14.x/guides/angular-13+"}}'),i=t(4848),r=t(4429);let o={id:"angular-ivy",title:"Angular Ivy"},l,a={},c=[{value:"Control ngcc processing",id:"control-ngcc-processing",level:2}];function d(e){let n={admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{title:"DEPRECATED",type:"warning",children:(0,i.jsxs)(n.p,{children:["This guide is now ",(0,i.jsx)(n.strong,{children:"DEPRECATED"})," and will be removed in the next major release together with the below APIs."]})}),"\n",(0,i.jsxs)(n.p,{children:["Starting from ",(0,i.jsx)(n.strong,{children:"v9.0.0+"}),", ",(0,i.jsx)(n.code,{children:"jest-preset-angular"})," is fully compatible with Angular Ivy. To make sure that Jest uses the\nAngular Ivy, you must run ",(0,i.jsx)(n.code,{children:"ngcc"})," before running tests. ",(0,i.jsx)(n.code,{children:"ngcc"})," will transform all Angular-format packages to be compatible\nwith Ivy compiler."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"jest-preset-angular"})," also provides a Jest global setup file to help you to run ",(0,i.jsx)(n.code,{children:"ngcc"})," with Jest. Add to the following section:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"to your root Jest config"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nexport default {\n  //...\n  globalSetup: 'jest-preset-angular/global-setup',\n} satisfies Config;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"control-ngcc-processing",children:"Control ngcc processing"}),"\n",(0,i.jsxs)(n.p,{children:["Since ",(0,i.jsx)(n.strong,{children:"v12.0.0"}),", ",(0,i.jsx)(n.code,{children:"jest-preset-angular"})," provide a possibility to skip ",(0,i.jsx)(n.code,{children:"ngcc"})," via ",(0,i.jsx)(n.code,{children:"globalThis"})," by doing the following"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="jest.config.ts"',children:"import type { Config } from 'jest';\n\nglobalThis.ngJest = {\n  skipNgcc: true,\n  tsconfig: 'tsconfig.spec.json', // this is the project root tsconfig\n};\n\nconst jestConfig: Config = {\n  //...\n  globalSetup: 'jest-preset-angular/global-setup',\n};\n\nexport default jestConfig;\n"})})]})}function g(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},4429:function(e,n,t){t.d(n,{R:()=>o,x:()=>l});var s=t(6540);let i={},r=s.createContext(i);function o(e){let n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);