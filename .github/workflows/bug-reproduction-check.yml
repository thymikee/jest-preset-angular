name: Bug Report Reproduction Check 🐛

on:
  issues:
    types: [opened]

permissions:
  contents: read
  issues: write
  models: read

jobs:
  reproduction-steps-check:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch issue 📥
        id: issue
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: |
            const issue_number = context.issue.number
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number
            })
            core.setOutput('title', issue.data.title)
            core.setOutput('body', issue.data.body)

      - name: Analyze issue for reproduction 🔍
        if: contains(join(github.event.issue.labels.*.name, ','), 'Bug Report')
        id: analyze-issue
        uses: actions/ai-inference@a1c11829223a786afe3b5663db904a3aa1eac3a2 # v2
        with:
          system-prompt-file: '.github/prompts/bug-report-support-prompt.md'
          prompt: |
            Please analyze this bug report and determine if it meets all reproduction criteria.

            **Issue Title:** ${{ github.event.issue.title }}

            **Issue Body:**
            ${{ github.event.issue.body }}

      - name: Comment on issue 💬
        if: contains(join(github.event.issue.labels.*.name, ','), 'Bug Report') && steps.analyze-issue.outputs.response != 'pass'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        env:
          AI_RESPONSE: ${{ steps.analyze-issue.outputs.response }}
        with:
          script: |
            const issue_number = context.issue.number
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: process.env.AI_RESPONSE
            })
