name: Bug Report Reproduction Check üêõ

on:
  issues:
    types: [opened]

permissions:
  contents: read
  issues: write
  models: read

jobs:
  reproduction-steps-check:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch issue üì•
        id: issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number
            })
            core.setOutput('title', issue.data.title)
            core.setOutput('body', issue.data.body)

      - name: Analyze issue for reproduction üîç
        if: contains(join(github.event.issue.labels.*.name, ','), 'Bug Report')
        id: analyze-issue
        uses: actions/ai-inference@v1
        with:
          model: mistral-ai/ministral-3b
          system-prompt: |
            Given a bug report title and text for jest-preset-angular (a Jest preset for Angular projects), return 'pass' if there is enough information to reliably reproduce the issue. The report should clearly describe:

            1. **Version**: Specific version of jest-preset-angular (not just "latest")
            2. **Reproduction Steps**: Clear steps to reproduce with either:
               - A link to a minimal reproduction repository
               - Detailed code examples and configuration
               - Specific commands that demonstrate the issue
            3. **Expected vs Actual Behavior**: Clear description of what should happen vs what actually happens
            4. **Environment Information**: Output from `npx envinfo --preset jest` showing Node.js, npm/yarn versions, OS, and Jest-related packages

            If any of these critical elements are missing, unclear, or contain placeholder text (like "A bug happened!" or "I expect to see X or Y"), return a friendly response explaining what specific information is needed for jest-preset-angular maintainers to investigate the issue effectively.
          prompt: |
            Title: ${{ steps.issue.outputs.title }}
            Body: ${{ steps.issue.outputs.body }}

      - name: Comment on issue üí¨
        if: contains(join(github.event.issue.labels.*.name, ','), 'Bug Report') && steps.analyze-issue.outputs.response != 'pass'
        uses: actions/github-script@v7
        env:
          AI_RESPONSE: ${{ steps.analyze-issue.outputs.response }}
        with:
          script: |
            const issue_number = context.issue.number
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number,
              body: process.env.AI_RESPONSE
            })
